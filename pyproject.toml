[tool.poetry]
name = "source-harvester"
version = "0.1.0"
description = "Source Harvester microservice (FastAPI) for provider-neutral search orchestration"
authors = ["ClaraNews Team <dev@claranews.local>"]
readme = "README.md"
packages = [
  { include = "app" }
]

[tool.poetry.dependencies]
python = "^3.13"
fastapi = "^0.112.0"
uvicorn = {extras = ["standard"], version = "^0.30.0"}
httpx = "^0.27.0"
pydantic = "^2.9.0"
pydantic-settings = "^2.4.0"
sqlalchemy = "^2.0.32"
asyncpg = "^0.30.0"
alembic = "^1.13.2"
structlog = "^24.1.0"
loguru = "^0.7.2"
aiosqlite = "^0.20.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.4"
pytest-asyncio = "^0.23.7"
respx = "^0.20.2"
black = "^24.10.0"
ruff = "^0.7.0"
mypy = "^1.13.0"
pytest-cov = "^5.0.0"
types-python-dateutil = "^2.9.0.20240316"
asgi-lifespan = "^2.1.0"

[build-system]
requires = ["poetry-core>=1.8.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ["py313"]

[tool.ruff]
line-length = 100
target-version = "py313"
select = [
  "E","F","I","UP","B","SIM","PL","PTH",
]
ignore = [
  "E501",  # handled by black
]
fix = true

[tool.ruff.isort]
known-first-party = ["app"]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-q"
testpaths = ["tests"]
asyncio_mode = "strict"

[tool.mypy]
python_version = "3.13"
packages = ["app"]
warn_unused_configs = true
disallow_untyped_defs = true
no_implicit_optional = true
check_untyped_defs = true
ignore_missing_imports = true
